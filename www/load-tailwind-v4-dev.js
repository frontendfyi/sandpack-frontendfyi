!function(){try{!function(){console.log("renameStyleTags");for(var t=document.querySelectorAll("style"),e=0;e<t.length;e++)t[e].setAttribute("type","text/tailwindcss")}(),function(){console.log("activateTailwind");var t=document.getElementById("tailwindcss-script");t&&t.remove();var e=document.createElement("script");e.id="tailwindcss-script",e.src="https://cdn.jsdelivr.net/npm/@tailwindcss/browser@4",document.head.appendChild(e)}(),new MutationObserver((function(t,e){if(0!==t.length){console.log("callback with",t.length,"mutations");for(var a=0;a<t.length;a++){var n=t[a];if("attributes"===n.type?console.log("Attribute mutation:",n.attributeName,"on",n.target.nodeName):"childList"===n.type?console.log("ChildList mutation: added",n.addedNodes.length,"removed",n.removedNodes.length):"characterData"===n.type&&console.log("CharacterData mutation on",n.target.parentNode?.nodeName),"childList"===n.type&&n.addedNodes.length>0)for(var o=0;o<n.addedNodes.length;o++){var i=n.addedNodes[o];"STYLE"===i.nodeName&&"text/tailwindcss"!==i.getAttribute("type")&&(console.log("Setting type on new style tag"),i.setAttribute("type","text/tailwindcss"))}"attributes"===n.type&&"STYLE"===n.target.nodeName&&"type"===n.attributeName&&"text/tailwindcss"!==n.target.getAttribute("type")&&(console.log("Fixing type attribute on style tag"),n.target.setAttribute("type","text/tailwindcss"))}}else console.log("callback fired with no mutations - this is unusual!")})).observe(document.head,{attributes:!0,childList:!0,subtree:!0})}catch{}}();